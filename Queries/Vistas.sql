CREATE VIEW TOP10BUSQUEDA
AS
SELECT 		DATO, COUNT(DATO) AS CANTIDAD
FROM 		BUSQUEDA
GROUP BY 	DATO
ORDER BY	CANTIDAD DESC
LIMIT 10;




CREATE OR REPLACE FUNCTION TOP5ADMINS(FECHA_1 DATE,FECHA_2 DATE)
	RETURNS TABLE (
			USUARIO TEXT,
			CANTIDAD BIGINT
	) AS  $$
BEGIN
	RETURN QUERY
		SELECT		WHO, COUNT(WHO) AS CANTIDAD
		FROM		HISTORY_MOD
		WHERE		TABNAME ILIKE 'usuario'
		AND			TSTAMP::DATE > FECHA_1
		AND			TSTAMP::DATE < FECHA_2
		GROUP BY	WHO
		ORDER BY	CANTIDAD DESC
		LIMIT 5;
END;
$$
LANGUAGE PLPGSQL;




CREATE OR REPLACE FUNCTION PELICULAS_NOVISTAS(FECHA_1 DATE,FECHA_2 DATE)
	RETURNS TABLE (
			NOMBRE VARCHAR,
			CANTIDAD BIGINT
	) AS  $$
BEGIN
	RETURN QUERY
		SELECT NOMBRE, COUNT(NOMBRE) AS CANT
		FROM VER
		INNER JOIN PELICULA ON PELICULA.CPELICULA = VER.CPELICULA
		WHERE VER.DURACION/PELICULA.DURACION <1
		AND	  FECHA > FECHA_1 
		AND FECHA < FECHA_2
		AND   FECHA_2 - FECHA >=20
		GROUP BY NOMBRE
		ORDER BY CANT DESC
		LIMIT 20;
END;
$$
LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION TOP5_MES_HORAS(MES NUMERIC)
	RETURNS TABLE (
			HOURS NUMERIC,
			NAME VARCHAR,
			CANTI BIGINT
	) AS  $$
BEGIN 
	RETURN QUERY
		SELECT TOP.HORAS,PELICULA.NOMBRE,TOP.CANT 
		FROM
		 (SELECT rank_filter.* FROM (
				SELECT EXTRACT(HOUR FROM VER.TIMESTMP) AS HORAS,VER.CPELICULA AS CODIGO, COUNT(VER.CPELICULA) as Cant,
				ROW_NUMBER() OVER (
					PARTITION BY EXTRACT(HOUR FROM VER.TIMESTMP)
					ORDER BY  COUNT(VER.CPELICULA) DESC
				)
				FROM VER
				WHERE EXTRACT(HOUR FROM VER.TIMESTMP) >= 9 AND EXTRACT(HOUR FROM VER.TIMESTMP) <= 13
				AND   EXTRACT(MONTH FROM VER.FECHA) = MES
				GROUP BY HORAS,VER.CPELICULA
			) rank_filter WHERE ROW_NUMBER <= 5) AS TOP
		INNER JOIN PELICULA ON PELICULA.CPELICULA = TOP.CODIGO;
END;
$$
LANGUAGE PLPGSQL;